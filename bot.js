import {makeAnotherRecipePrompts} from './api/makeAnotherRecipePrompt.js'
import {askGPT} from './api/askGPT.js'
import { Telegraf, Markup } from "telegraf";
import dotenv from "dotenv";

dotenv.config();

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ .env
const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

// –•—Ä–∞–Ω–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userState = {};

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ Groq API

// –ö–æ–º–∞–Ω–¥–∞ /start

const mainMenu = Markup.keyboard([
  ["–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–∞–Ω—É"],
  ["–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã"],
  ["–î—Ä—É–≥–æ–π —Ä–µ—Ü–µ–ø—Ç"]
])
  .resize(); // –î–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∫–æ–º–ø–∞–∫—Ç–Ω—ã–º–∏

// –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
bot.start((ctx) => {
  ctx.reply(
    "–ü—Ä–∏–≤–µ—Ç! –Ø - —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —à–µ—Ñ-–ø–æ–≤–∞—Ä. –î–∞–≤–∞–π —Å–Ω–∞—á–∞–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –∫—É—Ö–Ω–µ–π. –ö—É–¥–∞ —Å–µ–≥–æ–¥–Ω—è –ª–µ—Ç–∏–º?",
    mainMenu
  );
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.hears("–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–∞–Ω—É", (ctx) => {
  const chatId = ctx.chat.id;
  userState[chatId] = { step: 1 };

  ctx.reply("–ö—É–¥–∞ —Å–µ–≥–æ–¥–Ω—è –ª–µ—Ç–∏–º?");
});

bot.hears("–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã", (ctx) => {
  const chatId = ctx.chat.id;
  userState[chatId] = { step: 2 };
  ctx.reply("–ü–µ—Ä–µ—á–∏—Å–ª–∏ –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —É —Ç–µ–±—è –µ—Å—Ç—å:");
});

bot.hears("–î—Ä—É–≥–æ–π —Ä–µ—Ü–µ–ø—Ç", async (ctx) => {
  const chatId = ctx.chat.id;

  if (!userState[chatId] || !userState[chatId].country) {
    userState[chatId] = { step: 1 };
    ctx.reply("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Å—Ç—Ä–∞–Ω—É");
  } else if (userState[chatId].step === 1 || !userState[chatId].products) {
    userState[chatId].step = 2;
    ctx.reply("–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã");
  } else {
    const state = userState[chatId];

    await makeAnotherRecipePrompts(ctx, state);
  }
});

bot.hears("–ó–∞–∫–æ–Ω—á–∏—Ç—å", (ctx) => {
  ctx.reply("–•–æ—Ä–æ—à–æ, –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è ‚Äî –ø–∏—à–∏!");
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
bot.on("text", async (ctx) => {
  const chatId = ctx.chat.id;
  const userMessage = ctx.message.text;

  if (!userState[chatId]) {
    userState[chatId] = { step: 1 };
  }

  const state = userState[chatId];

  if (state.step === 1) {
    state.country = userMessage;
    state.step = 2;
    ctx.reply(`–û—Ç–ª–∏—á–Ω–æ! –¢—ã –≤—ã–±—Ä–∞–ª –∫—É—Ö–Ω—é ${state.country}. –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ—á–∏—Å–ª–∏, –∫–∞–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã —É —Ç–µ–±—è –µ—Å—Ç—å?`);
  } else if (state.step === 2) {
    state.products = userMessage;
    state.step = 3;

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    const prompt = `–¢—ã ‚Äî —à–µ—Ñ-–ø–æ–≤–∞—Ä –∏–∑ ${state.country} —Å 20-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º. –£ –º–µ–Ω—è –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã: ${state.products}.
    –ü–æ–¥—Å–∫–∞–∂–∏ —Ä–µ—Ü–µ–ø—Ç –≤–∫—É—Å–Ω–æ–≥–æ –±–ª—é–¥–∞ —Å–≤–æ–µ–π –∫—É—Ö–Ω–∏ (${state.country}) —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤.
    –ù–∞–ø–∏—à–∏ —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞, –ø–æ—Ç–æ–º —Ä–∞—Å–ø–∏—à–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–∏–¥–∏–µ–Ω—Ç–æ–≤, –ø–æ—Ç–æ–º –¥–µ–π—Å—Ç–≤–∏—è –ø–æ —à–∞–≥–∞–º. –ù–µ –ø–∏—à–∏ –∑–∞–≤–µ—Ä—à–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–µ –∑–∞–¥–∞–≤–∞–π –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.
    –í –æ—Ç–≤–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫.`;

    ctx.reply("–ì–æ—Ç–æ–≤–ª—é —Ä–µ—Ü–µ–ø—Ç... ‚è≥");

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º Groq API
    const response = await askGPT(prompt);

    if (response) {
      await ctx.reply(response);  // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await ctx.reply("–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥—Ä—É–≥–æ–π —Ä–µ—Ü–µ–ø—Ç?");

      state.step = 4;
    } else {
      await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.");
    }

  } else if (state.step === 4) {
    if (userMessage.toLowerCase() === "–¥–∞") {
      await makeAnotherRecipePrompts(ctx, state);
    } else {
      state.step = 5;
      ctx.reply("–ò–∑–º–µ–Ω–∏–º –ø—Ä–æ–¥—É–∫—Ç—ã?");
    }
  } else if (state.step === 5) {
    if (userMessage.toLowerCase() === "–¥–∞") {
      state.step = 2;
      ctx.reply("–ü–µ—Ä–µ—á–∏—Å–ª–∏ –Ω–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:");
    } else {
      ctx.reply("–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞! üçΩÔ∏è");
      delete userState[chatId];
    }
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();
console.log("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!");